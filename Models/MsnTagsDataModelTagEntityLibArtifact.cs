// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace MicrosoftNewsAPI.SDK.Models
{
    using Newtonsoft.Json;
    using System.Collections;
    using System.Collections.Generic;
    using System.Linq;

    public partial class MsnTagsDataModelTagEntityLibArtifact
    {
        /// <summary>
        /// Initializes a new instance of the
        /// MsnTagsDataModelTagEntityLibArtifact class.
        /// </summary>
        public MsnTagsDataModelTagEntityLibArtifact()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the
        /// MsnTagsDataModelTagEntityLibArtifact class.
        /// </summary>
        public MsnTagsDataModelTagEntityLibArtifact(string source = default(string), string sourceId = default(string), string cmsId = default(string), string publishedDateTime = default(string), MsnTagsDataModelTagEntityLibArtifactDataProviderSummary provider = default(MsnTagsDataModelTagEntityLibArtifactDataProviderSummary), IList<MsnTagsDataModelTagEntityLibArtifactDataImage> images = default(IList<MsnTagsDataModelTagEntityLibArtifactDataImage>), string abstractProperty = default(string), IList<MsnTagsDataModelTagEntityLibArtifactDataHeadline> headlines = default(IList<MsnTagsDataModelTagEntityLibArtifactDataHeadline>), IList<MsnTagsDataModelTagEntityLibArtifactDataTagEvaluationGroup> tagEvaluationGroups = default(IList<MsnTagsDataModelTagEntityLibArtifactDataTagEvaluationGroup>), IList<MsnTagsDataModelTagEntityLibArtifactDataTag> tags = default(IList<MsnTagsDataModelTagEntityLibArtifactDataTag>), IList<MsnTagsDataModelTagEntityLibArtifactDataTag> algoTags = default(IList<MsnTagsDataModelTagEntityLibArtifactDataTag>), IList<MsnTagsDataModelTagEntityLibArtifactDataCategory> categories = default(IList<MsnTagsDataModelTagEntityLibArtifactDataCategory>), IList<MsnTagsDataModelTagEntityLibArtifactDataExternalVideoFile> externalVideoFiles = default(IList<MsnTagsDataModelTagEntityLibArtifactDataExternalVideoFile>), MsnTagsDataModelTagEntityLibArtifactDataVideoMetadata videoMetadata = default(MsnTagsDataModelTagEntityLibArtifactDataVideoMetadata), MsnTagsDataModelTagEntityLibArtifactDataAudioMetadata audioMetadata = default(MsnTagsDataModelTagEntityLibArtifactDataAudioMetadata), bool? hasSyndicationRights = default(bool?), bool? isBreaking = default(bool?), int? galleryItemCount = default(int?), bool? isEmbedOnly = default(bool?), string title = default(string), string type = default(string), string url = default(string), string sourceHref = default(string), string locale = default(string), string adaptiveCard = default(string), string createdDateTime = default(string), string updatedDateTime = default(string), bool? deleted = default(bool?), string _et = default(string), string id = default(string), string _t = default(string))
        {
            Source = source;
            SourceId = sourceId;
            CmsId = cmsId;
            PublishedDateTime = publishedDateTime;
            Provider = provider;
            Images = images;
            AbstractProperty = abstractProperty;
            Headlines = headlines;
            TagEvaluationGroups = tagEvaluationGroups;
            Tags = tags;
            AlgoTags = algoTags;
            Categories = categories;
            ExternalVideoFiles = externalVideoFiles;
            VideoMetadata = videoMetadata;
            AudioMetadata = audioMetadata;
            HasSyndicationRights = hasSyndicationRights;
            IsBreaking = isBreaking;
            GalleryItemCount = galleryItemCount;
            IsEmbedOnly = isEmbedOnly;
            Title = title;
            Type = type;
            Url = url;
            SourceHref = sourceHref;
            Locale = locale;
            AdaptiveCard = adaptiveCard;
            CreatedDateTime = createdDateTime;
            UpdatedDateTime = updatedDateTime;
            Deleted = deleted;
            this._et = _et;
            Id = id;
            this._t = _t;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "source")]
        public string Source { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "sourceId")]
        public string SourceId { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "cmsId")]
        public string CmsId { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "publishedDateTime")]
        public string PublishedDateTime { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "provider")]
        public MsnTagsDataModelTagEntityLibArtifactDataProviderSummary Provider { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "images")]
        public IList<MsnTagsDataModelTagEntityLibArtifactDataImage> Images { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "abstract")]
        public string AbstractProperty { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "headlines")]
        public IList<MsnTagsDataModelTagEntityLibArtifactDataHeadline> Headlines { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "tagEvaluationGroups")]
        public IList<MsnTagsDataModelTagEntityLibArtifactDataTagEvaluationGroup> TagEvaluationGroups { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "tags")]
        public IList<MsnTagsDataModelTagEntityLibArtifactDataTag> Tags { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "algoTags")]
        public IList<MsnTagsDataModelTagEntityLibArtifactDataTag> AlgoTags { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "categories")]
        public IList<MsnTagsDataModelTagEntityLibArtifactDataCategory> Categories { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "externalVideoFiles")]
        public IList<MsnTagsDataModelTagEntityLibArtifactDataExternalVideoFile> ExternalVideoFiles { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "videoMetadata")]
        public MsnTagsDataModelTagEntityLibArtifactDataVideoMetadata VideoMetadata { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "audioMetadata")]
        public MsnTagsDataModelTagEntityLibArtifactDataAudioMetadata AudioMetadata { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "hasSyndicationRights")]
        public bool? HasSyndicationRights { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "isBreaking")]
        public bool? IsBreaking { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "galleryItemCount")]
        public int? GalleryItemCount { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "isEmbedOnly")]
        public bool? IsEmbedOnly { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "title")]
        public string Title { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "type")]
        public string Type { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "url")]
        public string Url { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "sourceHref")]
        public string SourceHref { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "locale")]
        public string Locale { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "adaptiveCard")]
        public string AdaptiveCard { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "createdDateTime")]
        public string CreatedDateTime { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "updatedDateTime")]
        public string UpdatedDateTime { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "deleted")]
        public bool? Deleted { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "_et")]
        public string _et { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "id")]
        public string Id { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "_t")]
        public string _t { get; set; }

    }
}
