// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace MicrosoftNewsAPI.SDK.Models
{
    using Newtonsoft.Json;
    using System.Collections;
    using System.Collections.Generic;
    using System.Linq;

    public partial class MsnTagsDataModelTagEntityLibCompositeCard
    {
        /// <summary>
        /// Initializes a new instance of the
        /// MsnTagsDataModelTagEntityLibCompositeCard class.
        /// </summary>
        public MsnTagsDataModelTagEntityLibCompositeCard()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the
        /// MsnTagsDataModelTagEntityLibCompositeCard class.
        /// </summary>
        /// <param name="nextPageUrl">Get or set the Fetchable NextPageUrl of
        /// the Card Content</param>
        /// <param name="metadata">Get or set the dictionary of
        /// Metadata.</param>
        /// <param name="section">An semantic section name of Composite cards,
        /// it can be used as hint of UI configuration</param>
        /// <param name="title">Get or set the EntityName of the
        /// Actionable</param>
        /// <param name="type">Get or set the Type of the Card.
        /// Please use ContentTypes for this property although we don't use a
        /// strong name for easier backward compatibilty for future
        /// extension.</param>
        /// <param name="url">Get or set the Clickable Url of the Card</param>
        /// <param name="locale">Gets or sets Locale of the Card (optional) for
        /// extra information purpose.</param>
        /// <param name="adaptiveCard">Gets or sets AdaptiveCard of the Card
        /// (optional) for adaptive card rendering purpose.</param>
        /// <param name="createdDateTime">Get or set the CreateDate of the
        /// entity</param>
        /// <param name="updatedDateTime">Get or set the ModifiedDate of the
        /// entity</param>
        /// <param name="deleted">Get or set whether the entity is
        /// Deleted</param>
        /// <param name="_et">Get or set the extended type</param>
        public MsnTagsDataModelTagEntityLibCompositeCard(string nextPageUrl = default(string), IList<object> subCards = default(IList<object>), IDictionary<string, IList<MsnTagsDataModelTagEntityLibMetadata>> metadata = default(IDictionary<string, IList<MsnTagsDataModelTagEntityLibMetadata>>), string section = default(string), string title = default(string), string type = default(string), string url = default(string), string locale = default(string), string adaptiveCard = default(string), string createdDateTime = default(string), string updatedDateTime = default(string), bool? deleted = default(bool?), string _et = default(string), string id = default(string), string _t = default(string))
        {
            NextPageUrl = nextPageUrl;
            SubCards = subCards;
            Metadata = metadata;
            Section = section;
            Title = title;
            Type = type;
            Url = url;
            Locale = locale;
            AdaptiveCard = adaptiveCard;
            CreatedDateTime = createdDateTime;
            UpdatedDateTime = updatedDateTime;
            Deleted = deleted;
            this._et = _et;
            Id = id;
            this._t = _t;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets get or set the Fetchable NextPageUrl of the Card
        /// Content
        /// </summary>
        [JsonProperty(PropertyName = "nextPageUrl")]
        public string NextPageUrl { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "subCards")]
        public IList<object> SubCards { get; set; }

        /// <summary>
        /// Gets or sets get or set the dictionary of Metadata.
        /// </summary>
        [JsonProperty(PropertyName = "metadata")]
        public IDictionary<string, IList<MsnTagsDataModelTagEntityLibMetadata>> Metadata { get; set; }

        /// <summary>
        /// Gets or sets an semantic section name of Composite cards, it can be
        /// used as hint of UI configuration
        /// </summary>
        [JsonProperty(PropertyName = "section")]
        public string Section { get; set; }

        /// <summary>
        /// Gets or sets get or set the EntityName of the Actionable
        /// </summary>
        [JsonProperty(PropertyName = "title")]
        public string Title { get; set; }

        /// <summary>
        /// Gets or sets get or set the Type of the Card.
        /// Please use ContentTypes for this property although we don't use a
        /// strong name for easier backward compatibilty for future extension.
        /// </summary>
        [JsonProperty(PropertyName = "type")]
        public string Type { get; set; }

        /// <summary>
        /// Gets or sets get or set the Clickable Url of the Card
        /// </summary>
        [JsonProperty(PropertyName = "url")]
        public string Url { get; set; }

        /// <summary>
        /// Gets or sets Locale of the Card (optional) for extra information
        /// purpose.
        /// </summary>
        [JsonProperty(PropertyName = "locale")]
        public string Locale { get; set; }

        /// <summary>
        /// Gets or sets AdaptiveCard of the Card (optional) for adaptive card
        /// rendering purpose.
        /// </summary>
        [JsonProperty(PropertyName = "adaptiveCard")]
        public string AdaptiveCard { get; set; }

        /// <summary>
        /// Gets or sets get or set the CreateDate of the entity
        /// </summary>
        [JsonProperty(PropertyName = "createdDateTime")]
        public string CreatedDateTime { get; set; }

        /// <summary>
        /// Gets or sets get or set the ModifiedDate of the entity
        /// </summary>
        [JsonProperty(PropertyName = "updatedDateTime")]
        public string UpdatedDateTime { get; set; }

        /// <summary>
        /// Gets or sets get or set whether the entity is Deleted
        /// </summary>
        [JsonProperty(PropertyName = "deleted")]
        public bool? Deleted { get; set; }

        /// <summary>
        /// Gets or sets get or set the extended type
        /// </summary>
        [JsonProperty(PropertyName = "_et")]
        public string _et { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "id")]
        public string Id { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "_t")]
        public string _t { get; set; }

    }
}
